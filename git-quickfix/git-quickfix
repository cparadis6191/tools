#!/usr/bin/env sh

set -e

usage() {
	cat <<EOF
Usage:
	$(basename -- "$0") diff
	$(basename -- "$0") diffref
	$(basename -- "$0") show
	$(basename -- "$0") stash show
	git diff --patch --no-prefix --relative | $(basename -- "$0")
	vim -q <($(basename -- "$0") diff --staged)
	vim -q <($(basename -- "$0") stash show)
	vim -q <($(basename -- "$0") show)
EOF
}

no_prefix_relative_diff() (
	# Split command and required options from remaining options
	git_command="$1"
	shift

	case "$git_command" in
		diffref) # [<ref_spec>]
			required_options="${1:-1}"
			if [ $# -gt 0 ]; then
				shift
			fi
			;;
		stash) # show
			required_options="$1"
			shift
			;;
	esac

	# Put remaining options at the end to support commits and paths
	if [ "$required_options" = '' ]; then
		git "$git_command" --patch --no-prefix --relative "$@"
	else
		git "$git_command" "$required_options" --patch --no-prefix --relative "$@"
	fi
)

# Adapted from mode_diff() in git-jump
diff_to_quickfix() {
	perl -ne '
	if (m{^\+\+\+ (.*)}) { $file = $1; next }
	defined($file) or next;
	if (m/^@@ .*?\+(\d+)/) { $line = $1; next }
	defined($line) or next;
	if (/^ /) { $line++; next }
	if (/^[-+]\s*(.*)/) {
		print "$file:$line: $1\n";
		$line = undef;
	}
	'
}

while getopts h OPT; do
	case $OPT in
		h)
			usage

			exit 0
			;;
		*)
			echo "Try '$(basename -- "$0") -h' for more information."

			exit 1
			;;
	esac
done

if [ $# -gt 0 ]; then
	no_prefix_relative_diff "$@" | diff_to_quickfix
else
	diff_to_quickfix
fi
